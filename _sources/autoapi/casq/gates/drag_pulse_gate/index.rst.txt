:py:mod:`casq.gates.drag_pulse_gate`
====================================

.. py:module:: casq.gates.drag_pulse_gate

.. autoapi-nested-parse::

   Drag pulse gate.



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   casq.gates.drag_pulse_gate.DragPulseGate




.. py:class:: DragPulseGate(duration, amplitude, angle = None, limit_amplitude = True, name = None)


   Bases: :py:obj:`casq.gates.pulse_gate.PulseGate`

   DragPulseGate class.

   Note: Currently only single qubit gates are supported.

   Args:
       duration: Pulse length in terms of the sampling period dt.
       amplitude: The magnitude of the amplitude of the Gaussian and square pulse.
       angle: The angle of the complex amplitude of the pulse. Default value 0.
       limit_amplitude: If True, then limit the amplitude of the waveform to 1.
           The default is True and the amplitude is constrained to 1.
       name: Optional display name for the pulse gate.

   .. py:method:: pulse(parameters)

      DragPulseGate.pulse method.

      Builds pulse for pulse gate.

      Args:
      parameters: Dictionary of pulse parameters that defines the pulse envelope.
          - sigma: A measure of how wide or narrow the Gaussian risefall is,i.e. its standard deviation.
          - beta: The DRAG correction amplitude.

      Returns:
          :py:class:`qiskit.pulse.library.ScalableSymbolicPulse`


   .. py:method:: to_parameters_dict(parameters)

      GaussianSquarePulseGate.to_parameters_dict method.

      Builds parameter dictionary from array of parameter values.

      Args:
          parameters: Array of pulse parameter values in order [sigma, beta].

      Returns:
          Dictionary of parameters.



